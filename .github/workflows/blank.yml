# name 可以自定义
name: VUEPRESS ACTION

# 触发条件：在 push 到 main/master 分支后，新的 Github 项目 应该都是 main，而之前的项目一般都是 master
on:
  push:
    branches:
      - master

# 执行的任务
jobs:
  # 任务名称
  build-and-deploy:
    # 执行的环境，默认是在最新版本的Ubuntu系统
    runs-on: ubuntu-latest
    # 执行的步骤
    steps:
      # checkout代码
      # 其中actions是github官方账号，checkout是改账号下提供的库，可以直接拿来使用，对应的版本是v2
      # setup-node同上
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        # 设置node的版本
        with:
          node-version: "14"
        # 执行步骤的名称
      - name: Compiling start
        # 执行的具体脚本
        
        run: echo Compiling start!
        # 如果在执行的时候报错，提示需要用户名跟邮箱，那么需要单独设置下邮箱跟用户名
      - run: git config --global user.email "ishupei@qq.com"
      - run: git config --global user.name "ishupei"
        # 执行安装跟打包命令
      - run: npm install && npm run build

      # 生成静态文件
      - name: Build
        run: npm install && build

      # 部署到 GitHub Pages
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }} # 也就是我们刚才生成的 secret
          BRANCH: dist-pages # 部署到 dist-pages 分支，因为 main 分支存放的一般是源码，而 dist-pages 分支则用来存放生成的静态文件
          FOLDER: docs/.vuepress/dist # vuepress 生成的静态文件存放的地方

